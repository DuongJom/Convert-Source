// <auto-generated />
using System;
using HeThongBaiXe;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HeThongBaiXe.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250428173534_InitDBv1")]
    partial class InitDBv1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HeThongBaiXe.Models.BangPhiGuiXe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("GiaGui")
                        .HasColumnType("float");

                    b.Property<string>("LoaiGui")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BangPhiGuiXes");
                });

            modelBuilder.Entity("HeThongBaiXe.Models.ChiTietGuiXe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChoDeXeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayRa")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhuongTienId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChoDeXeId");

                    b.HasIndex("PhuongTienId");

                    b.ToTable("ChiTietGuiXes");
                });

            modelBuilder.Entity("HeThongBaiXe.Models.ChoDeXe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChoDeXes");
                });

            modelBuilder.Entity("HeThongBaiXe.Models.HoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BangPhiGuiXeId")
                        .HasColumnType("int");

                    b.Property<int>("ChiTietGuiXeId")
                        .HasColumnType("int");

                    b.Property<double>("TongHoaDon")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BangPhiGuiXeId");

                    b.HasIndex("ChiTietGuiXeId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("HeThongBaiXe.Models.PhuongTien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BienSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenChuXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaCaVet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("PhuongTiens");
                });

            modelBuilder.Entity("HeThongBaiXe.Models.TaiKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("HeThongBaiXe.Models.ChiTietGuiXe", b =>
                {
                    b.HasOne("HeThongBaiXe.Models.ChoDeXe", "ChoDeXe")
                        .WithMany()
                        .HasForeignKey("ChoDeXeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeThongBaiXe.Models.PhuongTien", "PhuongTien")
                        .WithMany()
                        .HasForeignKey("PhuongTienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChoDeXe");

                    b.Navigation("PhuongTien");
                });

            modelBuilder.Entity("HeThongBaiXe.Models.HoaDon", b =>
                {
                    b.HasOne("HeThongBaiXe.Models.BangPhiGuiXe", "BangPhiGuiXe")
                        .WithMany()
                        .HasForeignKey("BangPhiGuiXeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeThongBaiXe.Models.ChiTietGuiXe", "ChiTietGuiXe")
                        .WithMany()
                        .HasForeignKey("ChiTietGuiXeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BangPhiGuiXe");

                    b.Navigation("ChiTietGuiXe");
                });

            modelBuilder.Entity("HeThongBaiXe.Models.PhuongTien", b =>
                {
                    b.HasOne("HeThongBaiXe.Models.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });
#pragma warning restore 612, 618
        }
    }
}
